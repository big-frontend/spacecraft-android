plugins {
    id "io.github.electrolytej.app-plugin"
    id("com.google.gms.google-services")
//    id("io.sentry.android.gradle")
    id("com.google.firebase.crashlytics")
    id("com.google.firebase.appdistribution")
    id("com.google.firebase.firebase-perf")
    id("com.google.devtools.ksp")
    id("electrolytej.android.application.jacoco")
}
apply from: "$rootDir/script/app_config.gradle"
apply from: "$rootDir/script/test_impl.gradle"
android {
    namespace "com.electrolytej.spacecraft"
    ndkVersion = "28.0.13004108"
    defaultConfig {
        resValue "string", "app_name", "spacecraft.app"
        buildConfigField('String', 'BUGLY_APP_ID', '"3d62251014"')
        buildConfigField('String', 'BUGLY_APP_KEY', '"a15ecf84-1786-40c6-abf5-fe975fce22e6"')
        buildConfigField('String', 'XIAOMI_APP_ID', '"2882303761517994447"')
        buildConfigField('String', 'XIAOMI_APP_KEY', '"5921799441447"')
        buildConfigField('String', 'AMAP_KEY', '"84198333a8ab4404cd35829dbb4ec435"')
        manifestPlaceholders = [
                'BUGLY_APP_ID'     : '3d62251014',
                'BUGLY_APP_KEY'    : 'a15ecf84-1786-40c6-abf5-fe975fce22e6',
                "BUGLY_APP_VERSION": rootProject.ext.versionName,
                'AMAP_KEY'         : '84198333a8ab4404cd35829dbb4ec435',
                "PGYER_APPID"      : '0ba5ba7940deded0f77b37b7655b252e',
                "PGYER_API_KEY"    : '8543d53b97cbb4daa5f55f807ab7e31e',
                "PGYER_FRONTJS_KEY": "ac450bcd9fdca58dddb1a630bb752dd7"
        ]
        multiDexEnabled = true//support android 20 or lower
//        multiDexKeepFile file('multiDexKeep.txt')
//        multiDexKeepProguard file('multiDexKeep.pro')
        applicationId rootProject.applicationId
        testApplicationId "${rootProject.applicationId}.test"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
        testOptions.unitTests.includeAndroidResources = true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
    signingConfigs {
        releaseSigningConfig {
            (keyAlias, keyPassword, storePassword) = [project.rootProject.keyAlias, project.rootProject.keyPassword, project.rootProject.storePassword]
            storeFile project.file("${project.rootDir}/${project.rootProject.storeFilePath}")
            v1SigningEnabled true
            v2SigningEnabled true
        }

    }
    buildTypes {
//        inhouse {
//            initWith release
//            minifyEnabled false
//            shrinkResources false
//        }
        release {
            signingConfig signingConfigs.releaseSigningConfig
            manifestPlaceholders = [
                    'QQ_KEY': 'adf', 'WEXIN_KEY': 'adfaf'

            ]
            firebaseAppDistribution {
//                releaseNotesFile = "${rootDir}/releasenotes.txt"
                testers = "hawksjamesf@gmail.com"
                serviceCredentialsFile = "${projectDir}/spacecraft-22dc1-e7362822612d.json"
//                artifactPath "${buildDir}/outputs/apk/release/app-release.apk"
            }
            firebaseCrashlytics {
                nativeSymbolUploadEnabled true
                mappingFileUploadEnabled true
                unstrippedNativeLibsDir = "$buildDir/intermediates/merged_native_libs/release/out/lib/arm64-v8a"
            }
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.releaseSigningConfig
            manifestPlaceholders = [
                    'QQ_KEY': 'adf', 'WEXIN_KEY': 'adfaf'
            ]
            firebaseAppDistribution {
//                releaseNotesFile = "${rootDir}/releasenotes.txt"
                testers = "electrolytej@gmail.com"
                serviceCredentialsFile = "${projectDir}/spacecraft-22dc1-e7362822612d.json"
//                artifactPath "${buildDir}/outputs/apk/debug/app-debug.apk"
            }
            ext.alwaysUpdateBuildId = false
            ext.enableCrashlytics = false
            firebaseCrashlytics {
                mappingFileUploadEnabled false
                nativeSymbolUploadEnabled false
                unstrippedNativeLibsDir = "$buildDir/intermediates/merged_native_libs/debug/out/lib/arm64-v8a"
            }
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            applicationIdSuffix = '.debug'
        }
    }
    /**
     * 渠道包 start
     */
//    flavorDimensions 'default'
//    productFlavors {
//        xiaomi {
//            manifestPlaceholders = [
//                    'APP_CHANNEL': 'asdfasdfsdaf',
//            ]
//        }
//        huawei {
//            manifestPlaceholders = [
//                    'APP_CHANNEL': '1232',
//            ]
//        }
//    }
    /**
     * 渠道包 end
     */
    //    flavorDimensions 'env','device'
//    productFlavors {
//        beta {
//            dimension 'env'
//        }
//        dev{
//            dimension 'env'
//        }
//        tv {
//            dimension 'device'
//        }
//        phone {
//            dimension 'device'
//        }

//    }
    lintOptions {
        quiet true
        lintConfig project.file("$project.rootDir/lint.xml")
        htmlReport true
//        htmlOutput project.file("$project.rootDir/lint-report-${project.name}.html")
        xmlReport true
//        xmlOutput project.file("$project.rootDir/lint-report-${project.name}.xml")
        warningsAsErrors true
        abortOnError false
//                // Turns off checks for the issue IDs you specify.
//                disable 'TypographyFractions','TypographyQuotes'
//                // Turns on checks for the issue IDs you specify. These checks are in
//                // addition to the default lint checks.
//                enable 'RtlHardcoded','RtlCompat', 'RtlEnabled'
//                // To enable checks for only a subset of issue IDs and ignore all others,
//                // list the issue IDs with the 'check' property instead. This property overrides
//                // any issue IDs you enable or disable using the properties above.
//                checkOnly 'NewApi', 'InlinedApi'
//                // If set to true, turns off analysis progress reporting by lint.
//                quiet true
//                // if set to true (default), stops the build if errors are found.
//                abortOnError false
//                // if true, only report errors.
//                ignoreWarnings true
    }

//国内的应用市场没有区分abi
//    splits {
//        abi {
//            enable true
//            reset()
//            include "armeabi-v7a","arm64-v8a"
//            exclude "x86","x86_64","armeabi"
//            universalApk true
//        }
//    }
    // Instead, use the bundle block to control which types of configuration APKs
    // you want your app bundle to support.
    bundle {
        language {
            // This property is set to true by default.
            // You can specify `false` to turn off
            // generating configuration APKs for language resources.
            // These resources are instead packaged with each base and
            // feature APK.
            // Continue reading below to learn about situations when an app
            // might change setting to `false`, otherwise consider leaving
            // the default on for more optimized downloads.
            enableSplit = false
        }
        density {
            // This property is set to true by default.
            enableSplit = false
        }
        abi {
            // This property is set to true by default.
            enableSplit = true
        }
    }

//    dexOptions {
//        preDexLibraries true
//        javaMaxHeapSize "8g"
//        maxProcessCount 8
//        dexInProcess = true
//    }

    packagingOptions {
        exclude 'META-INF/proguard/coroutines.pro'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libwechatbacktrace.so'
        pickFirst 'lib/arm64-v8a/libwechatbacktrace.so'
    }
    //想要使用dataBinding一定要在app主模块配置，其他lib模块配置不好使
    buildFeatures {
        dataBinding true
        aidl true
        buildConfig true
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output->
            println(output)
//            outputFileName = "${appName}_${latestVersionName}.${new Date().format('yyyyMMdd')}.apk"
        }
    }
}
dependencies {
//    ksp 'com.github.bumptech.glide:compiler:4.11.0'
    ksp(libs.glide.ksp)
//    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    project.depsConfig("implementation", "hotel-bundle1")
    project.depsConfig("implementation", "hotel-bundle2")
    project.depsConfig("implementation", "hotel-foundation")
    project.depsConfig("implementation", "ad-bundle")
    project.depsConfig("implementation", "main-module")
    project.depsConfig("implementation", "feeds-module")
    project.depsConfig("implementation", "account-module")
    project.depsConfig("implementation", "codescanner-qrcode")
    project.depsConfig("implementation", "update-module")
    implementation project.moduleify("framework-base")
//    implementation project.moduleify("framework-mockserver")
}